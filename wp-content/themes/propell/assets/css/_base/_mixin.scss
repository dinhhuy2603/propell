@use "sass:math";
 
// responsive
@mixin pc() {
  @media ( min-width: $breakpoint-pc--start )
    { @content; }
}
@mixin sp() {
  @media ( max-width: $breakpoint-sp )
    { @content; }
}
@mixin tablet() {
  @media ( max-width: $breakpoint-tb )
    { @content; }
}
@mixin queryDown($query) {
  @media screen and (max-width: $query) {
    @content;
  }
}
@mixin queryUp($query) {
  @media screen and (min-width: $query) {
    @content;
  }
}
  
// scale size pc
@function size-pc($size) {
  $result: (math.div($size, $design-pc--width) * 100);
  @return $result + vw;
}
// scale size sp
@function size-sp($size) {
  $result: (math.div($size, $design-sp--width) * 100);
  @return $result + vw;
}
// convert size px -> rem
@function rem($size) {
  $result: math.div($size, $font-size-default);
  @return $result + rem;
}
// font family
@mixin fontManrope() {
  font-family: "Manrope", sans-serif;
}
@mixin fontBonaNova() {
  font-family: "Bona Nova", serif;
}
@mixin fontProspec() {
  font-family: "Prospec-Light", sans-serif;
}

@mixin box-shadow($left:0, $under:0 ,$blur:10px, $opacity:0.2) {
  box-shadow: $left $under $blur 0 rgba(0, 0, 0, $opacity);
}
@mixin gap($gap:0px, $item:1){
  width: calc((100% / #{$item}) - ((#{$gap} * (#{$item} - 1)) / #{$item}));
}
@mixin grid($w:100, $gap:0){
  display: grid;
  grid-template-columns: rem($w) auto;
  gap: rem($gap);
}
//circle
@mixin circle($size:10px) {
  width: $size;
  height: $size;
  border-radius: 100%;
}
//square
@mixin square($width,$height,$color:null) {
  width: $width;
  height: $height;
  background: $color;
}